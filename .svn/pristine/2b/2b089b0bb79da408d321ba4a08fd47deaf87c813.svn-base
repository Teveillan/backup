<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="baidu-site-verification" content="FNQZfwk2LO" />
  <meta name="google-site-verification" content="Tiy4g_fxDyWORG0NcTPGtG9BomPV280Nfmd_a4DwBnM" />
  
  <title>最短路 SPFA | Teveillan</title>
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
  <meta name="description" content="首先，为了简化分析，我们假定图中是没有负环的。如果有负环，则就没有最短路径。

负环：一条从a到a的路径，路径上每条边的边权和为负。

但是SPFA算法是可以判断是否有负环存在的，比较基本的做法是判断每个点进队出队的次数，这个复杂度比较高。其实有一种DFS版的SPFA，用这个来判断是否有负环的效率是非常高的，这个我们后续再讲。
最短路的算法中都用着一种通用的思路：

初始化
松弛操作">
<meta property="og:type" content="article">
<meta property="og:title" content="最短路 SPFA">
<meta property="og:url" content="http://teveillan.com/2015/01/04/最短路-SPFA/">
<meta property="og:site_name" content="Teveillan">
<meta property="og:description" content="首先，为了简化分析，我们假定图中是没有负环的。如果有负环，则就没有最短路径。

负环：一条从a到a的路径，路径上每条边的边权和为负。

但是SPFA算法是可以判断是否有负环存在的，比较基本的做法是判断每个点进队出队的次数，这个复杂度比较高。其实有一种DFS版的SPFA，用这个来判断是否有负环的效率是非常高的，这个我们后续再讲。
最短路的算法中都用着一种通用的思路：

初始化
松弛操作">
<meta name="twitter:card" content="summary">
<meta name="twitter:title" content="最短路 SPFA">
<meta name="twitter:description" content="首先，为了简化分析，我们假定图中是没有负环的。如果有负环，则就没有最短路径。

负环：一条从a到a的路径，路径上每条边的边权和为负。

但是SPFA算法是可以判断是否有负环存在的，比较基本的做法是判断每个点进队出队的次数，这个复杂度比较高。其实有一种DFS版的SPFA，用这个来判断是否有负环的效率是非常高的，这个我们后续再讲。
最短路的算法中都用着一种通用的思路：

初始化
松弛操作">

  
    <link rel="alternative" href="/atom.xml" title="Teveillan" type="application/atom+xml">
  
  
    <link rel="icon" href="/favicon.png">
  
  <link rel="stylesheet" href="/css/style.css" type="text/css">

  

  <script src="http://libs.baidu.com/jquery/1.9.0/jquery.js"></script>
</head>

<body>
  <div id="container">
    <div class="left-col">
    <div class="overlay"></div>
<div class="intrude-less">
	<header id="header" class="inner">
		<div class="profilepic">
			<img src="https://raw.githubusercontent.com/Teveillan/Teveillan.github.io/master/img/teveillan.jpg">
		</div>

		<hgroup>
		  <h1 class="header-author"><a href="/">Teveillan</a></h1>
		</hgroup>

		
		<p class="header-subtitle">不把CF TC刷红的人生是不完整的。</p>
		

		
			<div class="switch-btn">
				<div class="icon">
					<div class="icon-ctn">
						<div class="icon-wrap icon-house" data-idx="0">
							<div class="birdhouse"></div>
							<div class="birdhouse_holes"></div>
						</div>
						<div class="icon-wrap icon-ribbon hide" data-idx="1">
							<div class="ribbon"></div>
						</div>
						
						<div class="icon-wrap icon-link hide" data-idx="2">
							<div class="loopback_l"></div>
							<div class="loopback_r"></div>
						</div>
						
						
						<div class="icon-wrap icon-me hide" data-idx="3">
							<div class="user"></div>
							<div class="shoulder"></div>
						</div>
						
					</div>
					
				</div>
				<div class="tips-box hide">
					<div class="tips-arrow"></div>
					<ul class="tips-inner">
						<li>菜单</li>
						<li>标签</li>
						
						<li>友情链接</li>
						
						
						<li>关于我</li>
						
					</ul>
				</div>
			</div>
		

		<div class="switch-area">
			<div class="switch-wrap">
				<section class="switch-part switch-part1">
					<nav class="header-menu">
						<ul>
						
							<li><a href="/">主页</a></li>
				        
							<li><a href="/archives">所有文章</a></li>
				        
							<li><a href="/categories/红名">红名</a></li>
				        
							<li><a href="/categories/Tech">Tech</a></li>
				        
						</ul>
					</nav>
					<nav class="header-nav">
						<div class="social">
							
								<a class="github" target="_blank" href="https://github.com/teveillan" title="github">github</a>
					        
								<a class="rss" target="_blank" href="/atom.xml" title="rss">rss</a>
					        
								<a class="google" target="_blank" href="mailto:teveillan@gmail.com" title="google">google</a>
					        
						</div>
					</nav>
				</section>
				
				
				<section class="switch-part switch-part2">
					<div class="widget tagcloud">
						<a href="/tags/BestCoder/" style="font-size: 20.00px;">BestCoder</a><a href="/tags/HDU/" style="font-size: 15.00px;">HDU</a><a href="/tags/MacOS/" style="font-size: 15.00px;">MacOS</a><a href="/tags/VIM/" style="font-size: 15.00px;">VIM</a><a href="/tags/随笔/" style="font-size: 10.00px;">随笔</a>
					</div>
				</section>
				
				
				
				<section class="switch-part switch-part3">
					
			          <a target="_blank" class="main-nav-link switch-friends-link" href="http://darkrhythm.net/">Pira-黄大神</a>
			        
			          <a target="_blank" class="main-nav-link switch-friends-link" href="http://litten.github.io/">Litten</a>
			        
				</section>
				

				
				
				<section class="switch-part switch-part4">
				
					我是谁，我从哪里来，我到哪里去？我就是我，是颜色不一样的吃货…
				</section>
				
			</div>
		</div>
	</header>				
</div>
    </div>
    <div class="mid-col">
      <nav id="mobile-nav">
  	<div class="overlay"></div>
	<div class="intrude-less">
		<header id="header" class="inner">
			<div class="profilepic">
				<img src="https://raw.githubusercontent.com/Teveillan/Teveillan.github.io/master/img/teveillan.jpg">
			</div>

			<hgroup>
			  <h1 class="header-author"><a href="/">Teveillan</a></h1>
			</hgroup>
			
			<p class="header-subtitle">不把CF TC刷红的人生是不完整的。</p>
			
			<nav class="header-menu">
				<ul>
				
					<li><a href="/">主页</a></li>
		        
					<li><a href="/archives">所有文章</a></li>
		        
					<li><a href="/categories/红名">红名</a></li>
		        
					<li><a href="/categories/Tech">Tech</a></li>
		        
		        <div class="clearfix"></div>
				</ul>
			</nav>
			<nav class="header-nav">
				<div class="social">
					
						<a class="github" target="_blank" href="https://github.com/teveillan" title="github">github</a>
			        
						<a class="rss" target="_blank" href="/atom.xml" title="rss">rss</a>
			        
						<a class="google" target="_blank" href="mailto:teveillan@gmail.com" title="google">google</a>
			        
				</div>
			</nav>
		</header>				
	</div>
</nav>
      <article id="post-最短路-SPFA" class="article article-type-post" itemscope itemprop="blogPost">
  
    <div class="article-meta">
      <a href="/2015/01/04/最短路-SPFA/" class="article-date">
  	<time datetime="2015-01-04T07:32:34.000Z" itemprop="datePublished">1月 4 2015</time>
</a>
      
  <div class="article-category">
    <a class="article-category-link" href="/categories/Algorithm/">Algorithm</a>
  </div>

      
    </div>
  
  <div class="article-inner">
    
      <input type="hidden" class="isFancy" />
    
    
      <header class="article-header">
        
  
    <h1 class="article-title" itemprop="name">
      最短路 SPFA
    </h1>
  

      </header>
    
    <div class="article-entry" itemprop="articleBody">
      
        <p>首先，为了简化分析，我们假定图中是没有负环的。<br>如果有负环，则就没有最短路径。</p>
<blockquote>
<p>负环：一条从a到a的路径，路径上每条边的边权和为负。</p>
</blockquote>
<p>但是SPFA算法是可以判断是否有负环存在的，比较基本的做法是判断每个点进队出队的次数，这个复杂度比较高。其实有一种DFS版的SPFA，用这个来判断是否有负环的效率是非常高的，这个我们后续再讲。</p>
<p>最短路的算法中都用着一种通用的思路：</p>
<ul>
<li>初始化</li>
<li>松弛操作<br><a id="more"></a><br>初始化自然不用说。<br>最开始还没有进行任何操作，每个点（除了起始点）距离起始点的距离为无穷大（记为dis[i]=INF），起始点到起始点的距离为0（记作dis[start]=0）。</li>
</ul>
<p>然后是松弛操作，也是本篇文章的主要部分。<br>松弛操作的要达到的目的是：</p>
<ul>
<li><strong> 对于任意点u, 将从起始点到u的最短距离记为dis[u]。 </strong></li>
<li><strong> 对于点u的任意相邻点v, 满足dis[v] &lt;= dis[u] + d[u,v] </strong></li>
</ul>
<blockquote>
<p>u与v相邻：存在一条边 u-&gt;v</p>
</blockquote>
<p>为什么要满足这样一个条件呢？</p>
<p>拿v点举例。<br>我们知道，一条从起始点s到v点的最短路径不可能是凭空产生的，从起始点到v点的最短路径在两种情况下可能产生：</p>
<ul>
<li><strong> s与v相邻，(s,v)这条边就可能（但不是一定）就直接是一条最短路径。</strong></li>
<li><strong> 有一个点u与v相邻，通过s到u的的最短路径，延伸出一条从s到v得最短路径。 </strong></li>
</ul>
<p>对于第一种情况，很明显一次就直接能找到最短路径。</p>
<p>对于第二种情况，假设到点v的最终最短路径是先从s到u, 再从u到v。<br>在算法执行的过程中，我们不知道此时的dis[u]是否是最短距离。这个都没关系，我们先满足在当前dis[u]的情况下,dis[v]是否小于等于dis[u] + d[u,v]。<br>如果此时的dis[u]是最优解，dis[v]自然也是最优解。<br>如果dis[u]不是最优解，那就往前推，先保证从s到u的最短路径中，u的前一个点x是最优解。如果x不是，再往前推，早晚会推到dis[s]=0，这个妥妥地是最优解了，然后就能保证后面的都是最优解。</p>
<p>所以，我们的算法流程是这样:</p>
<ol>
<li>初始化</li>
<li>将起始点加入一个队列中</li>
<li>从队列中取出来一个点u，并将这个点从队列中移除</li>
<li>对于u所有相邻的点v，看dis[v] 是否小于等于dis[u] + d[u,v]，如果不是（说明这个点还不是最优解，所以它之前更新过的点中仍然有些不是最优解），更新dis[v]=dis[u] + d[u,v]。再看v是否在队列中，如果不是，将v加入队列。</li>
<li>回到步骤3</li>
<li>直到队列为空，算法结束，此时的dis均为最优解。</li>
</ol>
<p>算法复杂度为O(k * e)，e为边数。k为可变常数，可证明一般情况下k &lt; 2。（我不知道怎么证明的…有兴趣的可以自己查查）</p>
<p>在这个模板中，为了省内存，我的队列采用的时循环队列的形式。因为每个点最多只能同时在队列里一次，所以这个队列大小为n就足够了。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> SPFA {</div><div class="line">    <span class="keyword">typedef</span> <span class="keyword">int</span> type;</div><div class="line">    <span class="keyword">struct</span> Edge {</div><div class="line">        <span class="keyword">int</span> to, next;</div><div class="line">        type d;</div><div class="line">    }edge[M];</div><div class="line"></div><div class="line">    type dis[N];</div><div class="line">    <span class="keyword">int</span> que[N], head[N], ip;</div><div class="line">    <span class="keyword">bool</span> visit[N];<span class="comment">//标记各点是否在队列中</span></div><div class="line"></div><div class="line">    <span class="keyword">public</span>:</div><div class="line">        SPFA() { init(); }</div><div class="line"></div><div class="line">        <span class="keyword">void</span> init() { <span class="comment">//初始化，采用链式前向星建边</span></div><div class="line">            <span class="built_in">memset</span>(head, -<span class="number">1</span>, <span class="keyword">sizeof</span>(head));</div><div class="line">            ip = <span class="number">0</span>;</div><div class="line">        }</div><div class="line"></div><div class="line">        <span class="keyword">void</span> add(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> d) {</div><div class="line">            edge[ip].to=v; edge[ip].d=d; edge[ip].next=head[u]; head[u]=ip++;</div><div class="line">        }</div><div class="line"></div><div class="line">        <span class="keyword">void</span> spfa(<span class="keyword">int</span> start, <span class="keyword">int</span> end, <span class="keyword">int</span> num) {</div><div class="line">            <span class="built_in">memset</span>(visit, <span class="number">0</span>, <span class="keyword">sizeof</span>(visit));<span class="comment">//清空队列</span></div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=num; ++i)   dis[i] = INF;<span class="comment">//步骤1</span></div><div class="line"></div><div class="line">            <span class="keyword">int</span> front = -<span class="number">1</span>, tail = -<span class="number">1</span>;</div><div class="line">            dis[start] = <span class="number">0</span>; visit[start] = <span class="number">1</span>; que[++tail] = start;<span class="comment">//步骤2</span></div><div class="line">            <span class="keyword">while</span>(front != tail) {</div><div class="line">                <span class="keyword">if</span>(++front &gt; num)   front -= num;</div><div class="line">                <span class="keyword">int</span> top = que[front];<span class="comment">//步骤3</span></div><div class="line">                visit[top] = <span class="number">0</span>;</div><div class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> p=head[top]; p!=-<span class="number">1</span>; p=edge[p].next) {</div><div class="line">                    <span class="keyword">int</span> to = edge[p].to, temp = dis[top] + edge[p].c;</div><div class="line">                    <span class="keyword">if</span>(dis[to] &gt; temp) {<span class="comment">//步骤4</span></div><div class="line">                        dis[to] = temp;</div><div class="line">                        <span class="keyword">if</span>(!visit[to]) {</div><div class="line">                            <span class="keyword">if</span>(++tail &gt; num)    tail -= num;</div><div class="line">                            que[tail] = to;</div><div class="line">                            viist[to] = <span class="number">1</span>;</div><div class="line">                        }</div><div class="line">                    }</div><div class="line">                }</div><div class="line">            }</div><div class="line">            <span class="keyword">return</span> dis[end];</div><div class="line">        }</div><div class="line">}</div></pre></td></tr></table></figure>

<p>`</p>

      
    </div>
    <footer class="article-footer">
      
      
    </footer>
  </div>
  
    
<nav id="article-nav">
  
    <a href="/2015/01/07/Mac中安装Vim7-4/" id="article-nav-newer" class="article-nav-link-wrap">
      <strong class="article-nav-caption">&lt;</strong>
      <div class="article-nav-title">
        
          (转) Mac中安装Vim7.4
        
      </div>
    </a>
  
  
    <a href="/2015/01/04/网络流/" id="article-nav-older" class="article-nav-link-wrap">
      <div class="article-nav-title">网络流</div>
      <strong class="article-nav-caption">&gt;</strong>
    </a>
  
</nav>

  
</article>


<div class="share">
	<!-- JiaThis Button BEGIN -->
	<div class="jiathis_style">
		<span class="jiathis_txt">分享到：</span>
		<a class="jiathis_button_tsina"></a>
		<a class="jiathis_button_cqq"></a>
		<a class="jiathis_button_douban"></a>
		<a class="jiathis_button_weixin"></a>
		<a class="jiathis_button_tumblr"></a>
		<a href="http://www.jiathis.com/share" class="jiathis jiathis_txt jtico jtico_jiathis" target="_blank"></a>
	</div>
	<script type="text/javascript" src="http://v3.jiathis.com/code/jia.js?uid=1405949716054953" charset="utf-8"></script>
	<!-- JiaThis Button END -->
</div>



<div class="duoshuo">
	<!-- 多说评论框 start -->
	<div class="ds-thread" data-thread-key="最短路-SPFA" data-title="最短路 SPFA" data-url="http://teveillan.com/2015/01/04/最短路-SPFA/"></div>
	<!-- 多说评论框 end -->
	<!-- 多说公共JS代码 start (一个网页只需插入一次) -->
	<script type="text/javascript">
	var duoshuoQuery = {short_name:"teveillan"};
	(function() {
		var ds = document.createElement('script');
		ds.type = 'text/javascript';ds.async = true;
		ds.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//static.duoshuo.com/embed.js';
		ds.charset = 'UTF-8';
		(document.getElementsByTagName('head')[0] 
		 || document.getElementsByTagName('body')[0]).appendChild(ds);
	})();
	</script>
	<!-- 多说公共JS代码 end -->
</div>




      <footer id="footer">
  <div class="outer">
    <div id="footer-info">
    	<div class="footer-left">
    		&copy; 2015 Teveillan
    	</div>
      	<div class="footer-right">
      		<a href="http://hexo.io/" target="_blank">Hexo</a>  Theme <a href="https://github.com/litten/hexo-theme-yilia" target="_blank">Yilia</a> by Litten
      	</div>
    </div>
  </div>
</footer>
    </div>
    
  <link rel="stylesheet" href="/fancybox/jquery.fancybox.css" type="text/css">

  <script src="/fancybox/jquery.fancybox.pack.js" type="text/javascript"></script>

  <script src="/js/main.js" type="text/javascript"></script>


  </div>
</body>
</html>